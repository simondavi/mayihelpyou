---
title: May I Help You?
subtitle: Exploring Teacher Educators' Attributions of Failure, Self-Efficacy and Social Support
title-block-banner: "#3459e6"
author:
  - name: David Simon
    orcid: 0009-0005-6451-3790
    email: da.simon@dipf.de
    affiliations:
      - name: DIPF | Leibniz Institute for Research and Information in Education
date: today
date-format: DD MMMM YYYY
editor: source
execute:
  warning: false
  message: false
  cache: true
format: 
  html:
    echo: true
    theme: zephyr
    mainfont: Arial
    fontsize: 1.2em
    code-block-bg: true
    code-block-border-left: "#3459e6"
    toc: true
    toc-location: left
    toc-depth: 4
    embed-resources: true
    code-fold: false
    code-tools: true
    code-link: true
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
bibliography: references.bib
---

```{css}
#| echo: false
p {
  text-align: justify
}
```

## Information

```{r}
# Input: b_sab_mzp2_2024_R_data_file.csv
#
# Output: --
#
# Contents: (1) Read Data
#           (2) Measures
#           (3) Results

####  ------------- Load Packages ------------- ####
library(here)           # find files
library(tidyverse)      # data management
library(psych)          # scale construction, EFA, CFA
library(lavaan)         # SEM
```

## Data Analysis

### 1 Read Data

Data:

```{r}
data <- read.csv(here("01_data/b_sab_mzp2_2024_R_data_file.csv"))
```

### 2 Measures

#### 2.1 Exploratory Factor Analysis (EFA): Social Support Scales  
The items measuring social support were taken from Richter at al. [-@richter2011soziale] and Schulz and Schwarzer [-@BSS]. We adapted them to the educators' perspective (Provider). Items were added to each facet according to our theoretical understanding of social support. An EFA was calculated to determine which items represented the three facets of social support best.

##### Dataevaluation

Data for EFA:

```{r}
data_efa <- data %>%
  dplyr::select(sozunt_ins5:sozunt_ins2)
```

*Kaiser–Meyer–Olkin (KMO) Test:*

- 0.00 - 0.49: Unacceptable
- 0.50 - 0.59: Miserable
- 0.60 - 0.69: Mediocre
- 0.70 - 0.79: Middling
- 0.80 - 0.89: Meritorious
- 0.90 - 1.00: Marvelous

```{r}
psych::KMO(data_efa)
```

Deletion of item `sozunt_ins4`, who failed the KMO test (< 0.50):

```{r}
data_efa <- data_efa %>%
  dplyr::select(-sozunt_ins4)
```

*Bartlett Test of Sphericity:*

```{r}
psych::cortest.bartlett(data_efa)$p.value
```

##### Exploratory Factor Analysis

*Step 1: Plausibility of a three factor solution*

Get Eigenvalues:

```{r}
eig <- eigen(cor(data_efa, use = "complete.obs")) # get eigenvalues
eig$values
```

Show scree plot:

```{r}
psych::scree(data_efa, pc = FALSE)  # plot scree plot 
```

The eigenvalue method (“Kaiser’s rule”) suggested four factors. The scree plot suggested two factors. In line with our theoretical understanding of the construct we started with three factors first, assuming correlated factors: 

*Step 2: Factor extraction*

```{r}
efa <- psych::fa(data_efa, nfactors = 3, rotate = "oblimin")
loadings <- efa$loadings
loadings
```

*Step 3: Item removal*

Only variables with loadings of .32 and above were interpreted as suggested as a first rule of thumb by Tabachnick and Fidell [-@tabachnick2001using]. 

Consequently `sozunt_emo1`, `sozunt_ins3` and `sozunt_ins2` were not further considered:

```{r}
data_efa <- data_efa %>%
  dplyr::select(-sozunt_emo1, -sozunt_ins3, -sozunt_ins2)
```

The EFA was repeated:

```{r}
efa <- psych::fa(data_efa, nfactors = 3, rotate = "oblimin")
loadings <- efa$loadings
loadings
```

*Step 4: Interpretation of factors*  

Factors were interpreted given the intended theoretical assignment of items to factors and a final cut of .45 regarding the loadings, which equals a 20% variance overlap between variable and factor and was characterised as "fair" by Comray [-@Comrey1962] and examplified in Tabachnick and Fidell [-@tabachnick2001using]. 

This resulted in the following three factors, which correspond to the three facets of social support:

- Factor 1: Informational support ("Tips and advice") was best represented through the items `sozunt_inf2`, `sozunt_inf3`, `sozunt_inf4` and  `sozunt_inf5`,

- Factor 2: Emotional support ("Comfort and nearness") was best represented through the items `sozunt_emo2`, `sozunt_emo3` and `sozunt_emo4`.

- Factor 3: Instrumental support ("Goods and materials") was best represented through the items `sozunt_ins1` and `sozunt_ins5`,

Adjustment of data accordingly:

```{r}
data_efa <- data_efa %>%
  dplyr::select(sozunt_inf2, sozunt_inf3, sozunt_inf4, sozunt_inf5,
                sozunt_emo2, sozunt_emo3, sozunt_emo4,
                sozunt_ins1, sozunt_ins5)
```

*Step 5: Final solution*

```{r}
efa <- psych::fa(data_efa, nfactors = 3, rotate = "oblimin")
loadings <- efa$loadings
loadings
psych::fa.diagram(loadings)
```

`sozunt_inf2` does not meet the cutoff criterion anymore. Since the deviation is small, we kept it and would only discard it, if reliability could be improved by dropping it, which was not the case: 

*Step 6: Evaluate Reliability*

```{r}
inf_sup_alpha <- data %>% 
  dplyr::select(sozunt_inf2, sozunt_inf3, sozunt_inf4, sozunt_inf5) %>%
  psych::alpha(title = "sozunt_inf")

emo_sup_alpha <- data %>%  
  dplyr::select(sozunt_emo2, sozunt_emo3, sozunt_emo4) %>%
  psych::alpha(title = "sozunt_emo")

ins_sup_alpha <- data %>% 
  dplyr::select(sozunt_ins1, sozunt_ins5) %>%
  psych::alpha(title = "sozunt_ins")
```

- Alpha informational support: `r inf_sup_alpha$total$std.alpha`
- Alpha emotional support: `r emo_sup_alpha$total$std.alpha`
- Alpha instrumental support: `r ins_sup_alpha$total$std.alpha`  

#### 2.2 Confirmatory Factor Analysis (CFA):  Self-Efficacy Scale
Tickell and Klassen [-@tickell2024developing] developed a  scale for measuring teacher mentoring self-efficacy beliefs and suggest a two-factor model, with factors named as *Pedagogical Practices* and *Professional Relationships*. We tested this factor structure in our German translation of the questionnaire:

##### Confirmatory Factor Analysis

Data for CFA:

```{r}
data_cfa <- data %>%
  dplyr::select(seffsab_1:seffsab_9)
```

*Step 1: Fitting a two-factor model*

```{r}
# specify the model
cfa_model <- ' pae =~ seffsab_1 + seffsab_2 + seffsab_20 + seffsab_14 + 
                      seffsab_6 + seffsab_28 + seffsab_48 + seffsab_39 +
                      seffsab_46 + seffsab_47 + seffsab_4
               rel =~ seffsab_29 + seffsab_44 + seffsab_27 + seffsab_42 + 
                      seffsab_9 '

# fit the model
fit_cfa <- cfa(cfa_model, data = data_cfa)
```

Model fit was poor:

```{r}
# CFI cut-off: .95; SRMR cut-off: .09
fitMeasures(fit_cfa, c("chisq", "df", "pvalue", "cfi", "srmr"))
```

*Step 2: Evaluate Reliability*

In order to improve the model-fit we evaluated reliability:

```{r}
sef_pea_alpha <- data %>% 
  dplyr::select(seffsab_1, seffsab_2, seffsab_20, seffsab_14, seffsab_6, 
                seffsab_28, seffsab_48, seffsab_39, seffsab_46, seffsab_47,
                seffsab_4) %>%
  psych::alpha(title = "sef_pea_alpha")

sef_rel_alpha <- data %>%  
  dplyr::select(seffsab_29, seffsab_44, seffsab_27, seffsab_42, seffsab_9) %>%
  psych::alpha(title = "sef_rel_alpha")
```

We were interested whether reliability improves if an item is dropped and if that might as well improve model fit. Alpha could not be improved in case of *Professional Relationships* nor *Relationships*: 

```{r}
sef_pea_alpha$alpha.drop[1:2]
sef_rel_alpha$alpha.drop[1:2]
```

But in case of *Professional Relationships* several items could be dropped without worsening. As we believed the translation of `seffsab_48` might be not suitable, we discarded this item and reran the CFA:

```{r}
data_cfa <- data_cfa %>%
  dplyr::select(-seffsab_48)

# specify the model
cfa_model_2 <- ' pae =~ seffsab_1 + seffsab_2 + seffsab_20 + seffsab_14 + 
                        seffsab_6 + seffsab_28 + seffsab_39 + seffsab_46 + 
                        seffsab_47 + seffsab_4
                 rel =~ seffsab_29 + seffsab_44 + seffsab_27 + seffsab_42 + 
                        seffsab_9 '

# fit the model
fit_cfa_2 <- cfa(cfa_model_2, data = data_cfa)
```

Model fit improved, but was still not good enough;

```{r}
# CFI cut-off: .95; SRMR cut-off: .09
fitMeasures(fit_cfa_2, c("chisq", "df", "pvalue", "cfi", "srmr"))
```

Looking at the reliability output again, we saw no room for further improvement:

```{r}
sef_pea_alpha <- data %>% 
  dplyr::select(seffsab_1, seffsab_2, seffsab_20, seffsab_14, seffsab_6, 
                seffsab_28, seffsab_39, seffsab_46, seffsab_47, seffsab_4) %>%
  psych::alpha(title = "sef_pea_alpha")

sef_pea_alpha$alpha.drop[1:2]
```

Although the model fit was not as good as desired, we considered it to be sufficient.

#### 2.3 Compute Scale Scores

```{r}
# Factor vignette, dummy for each vignette
data <- data %>%
  dplyr::mutate(vig = case_when((random == 1) ~ 1,
                                (random == 2) ~ 2,
                                (random == 3) ~ 3,
                                TRUE ~ as.numeric(NA)),
                vig1 = ifelse(vig == 1, 1, 0),
                vig2 = ifelse(vig == 2, 1, 0),
                vig3 = ifelse(vig == 3, 1, 0))


data$vig <- as.factor(data$vig)

# Mentoring Experience (years)
# data <- data %>%
#   dplyr::mutate(exp_men = 
#                  dplyr::coalesce(BEKE2_KS, BEFA1_SQ002))

# Sex
data <- data %>%
  dplyr::mutate(sex = ifelse(sex == 1, 1, 0)) # 1 = female, 0 = male

## Attribution 

data <- data %>%
  dplyr::mutate(int = int_1,  # Internality
                sta = sta_1,  # Stability 
                glo = glo_1,  # Globality
                con = kon_1)  # Controllability

## Affect 

# Negative affect, positive affect
data <- data %>% 
  dplyr::mutate(pos_aff = rowMeans(subset(data, select = c(affekt_1, affekt_3, 
                                                           affekt_4, affekt_6, 
                                                           affekt_10, affekt_11,
                                                           affekt_12, affekt_15)),
                                   na.rm = TRUE),
                neg_aff = rowMeans(subset(data, select = c(affekt_2, affekt_5, 
                                                           affekt_7, affekt_8, 
                                                           affekt_13, affekt_14,
                                                           affekt_16)),
                                   na.rm = TRUE),
                ang = affekt_5,   # Anger
                gui = affekt_7,   # Guilt
                sha = affekt_14)  # Shame


## Social Support

# Informational support
data <- data %>% 
  dplyr::mutate(inf_sup = rowMeans(subset(data, select = c(sozunt_inf2,
                                                           sozunt_inf3,
                                                           sozunt_inf4, 
                                                           sozunt_inf5)),
                                   na.rm = TRUE),

# Emotional support
                emo_sup = rowMeans(subset(data, select = c(sozunt_emo2, 
                                                           sozunt_emo3, 
                                                           sozunt_emo4)),
                                   na.rm = TRUE),
                
## Instrumental support               
                ins_sup = rowMeans(subset(data, select = c(sozunt_ins1, 
                                                           sozunt_ins5)),
                                 na.rm = TRUE))

## Self Efficacy

# Self Efficacy, Factor 1: Pedagogical Practices   
data <- data %>% 
  dplyr::mutate(sef_pea = rowMeans(subset(data, select = c(seffsab_1, seffsab_2, 
                                                           seffsab_20, seffsab_14, 
                                                           seffsab_6, seffsab_28, 
                                                           seffsab_39, seffsab_46, 
                                                           seffsab_47, seffsab_4)),
                                   na.rm = TRUE),

# Self Efficacy, Factor 2: Relationships
                sef_rel = rowMeans(subset(data, select = c(seffsab_29,seffsab_44,
                                                           seffsab_27,seffsab_42, 
                                                           seffsab_9)),
                                   na.rm = TRUE))
```

#### 2.4 Glossary

*Attributions*   
adapted from [@zurattributionsstil]

- `int`: Internality
- `sta`: Stability
- `glo`: Globality
- `con`: Controllability

*Affect*  
after [@breyer2016deutsche]

- `pos_aff`: Positive affect
- `neg_aff`: Negative affect
- `ang`: Anger
- `gui`: Guilt
- `sha`: Shame

*Social Support*  
adapted from [@richter2011soziale]

- `inf_sup`: Informational support
- `ins_sup`: Instrumental support
- `emo_sup`: Emotional support

*Self Efficacy*  
adapted from [@tickell2024developing]

- `sef_pea`: Pedagogical Practices
- `sef_res`: Relationships

### 3 Results

- H1a: Controllability predicts witholding of help
- H1b: Internality predicts witholding of help
- H1c: The effect of internality on withholding help is moderated by stability, such that internality predicts withholding help more strongly when stability is low
- H1d: The relationships are mediated by anger

#### 3.1 Correlation matrix
```{r}
# tbc
```


#### 3.2 Preliminaries

Only include data, that participated in the vignette experiment:
```{r}
data <- data %>%
  dplyr::filter(vig == 1 | vig == 2 | vig == 3) 
```

Test for normality, etc.
```{r}
# tbc
```

and independent variables were mean centered, before the interaction terms were calculated:

```{r}
# mean center independent variables
data$int_cntrd <- scale(data$int, center = TRUE, scale = FALSE)
data$sta_cntrd <- scale(data$sta, center = TRUE, scale = FALSE)
data$con_cntrd <- scale(data$con, center = TRUE, scale = FALSE)

# Interaction terms
data$conXint <- data$con_cntrd * data$int_cntrd 
data$intXsta <- data$int_cntrd * data$sta_cntrd 
```

The high correlations between the support scales can lead to multicollinearity and suppression effects in structural equation models. To reduce these effects, different models were calculated for each kind of social support:

#### 3.3 Informational support

```{r}
model_inf_sup <- '
  # Mesurement models
  
  # Measurement model: Informational support
  inf_support =~ sozunt_inf2 + sozunt_inf3 + sozunt_inf4 + sozunt_inf5
  
  # Measurement model: Self-efficacy
  # Pedagogical practices
  sef_pdggcl =~ seffsab_1 + seffsab_2 + seffsab_20 + seffsab_14 + 
                seffsab_6 + seffsab_28 + seffsab_39 + seffsab_46 + 
                seffsab_47 + seffsab_4
                     
  # Professional relationships                 
  sef_rltnsh =~ seffsab_29 + seffsab_44 + seffsab_27 + seffsab_42 + 
                seffsab_9
  
  # Structural model
  
  # Direct effects
  inf_support ~ c1*int_cntrd + c2*sta_cntrd + c3*con_cntrd + c4*conXint + c5*intXsta
  
  # Mediator
  ang ~ a1*int_cntrd
  ang ~ a2*sta_cntrd
  ang ~ a3*con_cntrd
  ang ~ a4*conXint
  ang ~ a5*intXsta
  
  inf_support ~ b*ang
  
  # Indirect effect
  ie_conXint := a4*c4
  ie_intXsta := a5*c5
  
  # Total effect
  te_conXint := b + (a4*c4)
  te_intXsta := b + (a5*c5)
  
  # Effect of self-efficacy
  inf_support ~ sef_pdggcl
  inf_support ~ sef_rltnsh
'

fit_inf_sup <- lavaan::sem(model = model_inf_sup, 
                           data = data, 
                           missing = "ML",
#                           cluster = "vig",
                           se = "robust",
                           meanstructure = TRUE)

summary(fit_inf_sup, standardized = TRUE)
```

Model fit:
```{r}
fitMeasures(fit_inf_sup, c("chisq", "df", "pvalue", "cfi", "srmr", "rmsea"))
```

#### 3.4 Instrumental support

Model did not converge

```{r}
model_ins_sup <- '
  # Mesurement models
  
  # Measurement model: Informational support
  ins_support =~ sozunt_ins1 + sozunt_ins5
  
  # Measurement model: Self-efficacy
  # Pedagogical practices
  sef_pdggcl =~ seffsab_1 + seffsab_2 + seffsab_20 + seffsab_14 + 
                seffsab_6 + seffsab_28 + seffsab_39 + seffsab_46 + 
                seffsab_47 + seffsab_4
                     
  # Professional relationships                 
  sef_rltnsh =~ seffsab_29 + seffsab_44 + seffsab_27 + seffsab_42 + 
                seffsab_9
  
  # Structural model
  
  # Direct effects
  ins_support ~ c1*int_cntrd + c2*sta_cntrd + c3*con_cntrd + c4*conXint + c5*intXsta
  
  # Mediator
  ang ~ a1*int_cntrd
  ang ~ a2*sta_cntrd
  ang ~ a3*con_cntrd
  ang ~ a4*conXint
  ang ~ a5*intXsta
  
  ins_support ~ b*ang
  
  # Indirect effect
  ie_conXint := a4*c4
  ie_intXsta := a5*c5
  
  # Total effect
  te_conXint := b + (a4*c4)
  te_intXsta := b + (a5*c5)
  
  # Effect of self-efficacy
  ins_support ~ sef_pdggcl
  ins_support ~ sef_rltnsh
'

fit_ins_sup <- lavaan::sem(model = model_ins_sup, 
                           data = data, 
                           missing = "ML",
#                           cluster = "vig",
                           se = "robust",
                           meanstructure = TRUE)

summary(fit_ins_sup, standardized = TRUE)
```

#### 3.5 Emotional support

```{r}
model_emo_sup <- '
  # Mesurement models
  
  # Measurement model: Informational support
  emo_support =~ sozunt_emo2 + sozunt_emo3+ sozunt_emo4
  
  # Measurement model: Self-efficacy
  # Pedagogical practices
  sef_pdggcl =~ seffsab_1 + seffsab_2 + seffsab_20 + seffsab_14 + 
                seffsab_6 + seffsab_28 + seffsab_39 + seffsab_46 + 
                seffsab_47 + seffsab_4
                     
  # Professional relationships                 
  sef_rltnsh =~ seffsab_29 + seffsab_44 + seffsab_27 + seffsab_42 + 
                seffsab_9
  
  # Structural model
  
  # Direct effects
  emo_support ~ c1*int_cntrd + c2*sta_cntrd + c3*con_cntrd + c4*conXint + c5*intXsta
  
  # Mediator
  ang ~ a1*int_cntrd
  ang ~ a2*sta_cntrd
  ang ~ a3*con_cntrd
  ang ~ a4*conXint
  ang ~ a5*intXsta
  
  emo_support ~ b*ang
  
  # Indirect effect
  ie_conXint := a4*c4
  ie_intXsta := a5*c5
  
  # Total effect
  te_conXint := b + (a4*c4)
  te_intXsta := b + (a5*c5)
  
  # Effect of self-efficacy
  emo_support ~ sef_pdggcl
  emo_support ~ sef_rltnsh
'

fit_emo_sup <- lavaan::sem(model = model_emo_sup, 
                           data = data, 
                           missing = "ML",
#                           cluster = "vig",
                           se = "robust",
                           meanstructure = TRUE)

summary(fit_emo_sup, standardized = TRUE)
```

Model fit:
```{r}
fitMeasures(fit_emo_sup, c("chisq", "df", "pvalue", "cfi", "srmr", "rmsea"))
```

#### 3.6 Exploration

*Might there be a relationship between emotions and self-efficacy?*

No:

```{r}
model <- '
  # Measurement model: Self-efficacy
  # Pedagogical practices
  sef_pdggcl =~ seffsab_1 + seffsab_2 + seffsab_20 + seffsab_14 + 
                seffsab_6 + seffsab_28 + seffsab_39 + seffsab_46 + 
                seffsab_47 + seffsab_4
                     
  # Professional relationships                 
  sef_rltnsh =~ seffsab_29 + seffsab_44 + seffsab_27 + seffsab_42 + 
                seffsab_9

  ang ~ sef_pdggcl + sef_rltnsh
  gui ~ sef_pdggcl + sef_rltnsh
  sha ~ sef_pdggcl + sef_rltnsh
'

fit <- lavaan::sem(model, data = data, missing = "ml")
summary(fit, standardized = TRUE)
```

Model fit:
```{r}
fitMeasures(fit, c("chisq", "df", "pvalue", "cfi", "srmr", "rmsea"))
```
#### 3.7 Descriptives: Vignettes

*Were the situations perceived as a failure?*

"How much do you see the lessons you have experienced as a failure or a success?"

- 1, 2, 3: Failure
- 4, 5, 6: Success

```{r}
data_vig1 <- data %>% 
  dplyr::filter(vig == 1) 

data_vig2 <- data %>% 
  dplyr::filter(vig == 2) 

data_vig3 <- data %>% 
  dplyr::filter(vig == 3) 

tab1 <- table(data_vig1$check_1)
tab2 <- table(data_vig2$check_1)
tab3 <- table(data_vig3$check_1)

barplot(tab1, main = "Vignette 1")
barplot(tab2, main = "Vignette 2")
barplot(tab3, main = "Vignette 3")
```

*Were the situations cause equally attributed?*

```{r}
tab1 <- data.frame(int = mean(data_vig1$int, na.rm = T),
                   sta = mean(data_vig1$sta, na.rm = T),
                   glo = mean(data_vig1$glo, na.rm = T),
                   con = mean(data_vig1$con, na.rm = T))

tab2 <- data.frame(int = mean(data_vig2$int, na.rm = T),
                   sta = mean(data_vig2$sta, na.rm = T),
                   glo = mean(data_vig2$glo, na.rm = T),
                   con = mean(data_vig2$con, na.rm = T))

tab3 <- data.frame(int = mean(data_vig3$int, na.rm = T),
                   sta = mean(data_vig3$sta, na.rm = T),
                   glo = mean(data_vig3$glo, na.rm = T),
                   con = mean(data_vig3$con, na.rm = T))

barplot(as.matrix(tab1), main = "Vignette 1")
barplot(as.matrix(tab2), main = "Vignette 2")
barplot(as.matrix(tab3), main = "Vignette 3")
```

*What reasons were given for the disruption to the lesson?*

```{r}
sorted_data <- data %>%
  dplyr::select(vig, ursache) %>%
   dplyr::arrange(vig)
```

Vignette 1:

```{r}
sorted_data_vig1 <- sorted_data %>%
  dplyr::filter(vig == 1)

print(sorted_data_vig1$ursache)
```

Vignette 2:

```{r}
sorted_data_vig2 <- sorted_data %>%
  dplyr::filter(vig == 2)

print(sorted_data_vig2$ursache)
```

Vignette 3:

```{r}
sorted_data_vig3 <- sorted_data %>%
  dplyr::filter(vig == 3)

print(sorted_data_vig3$ursache)
```

## References

::: {#refs}
:::