---
title: May I Help You?
subtitle: Exploring Teacher Educators' Attributions of Failure, Self-Efficacy and Social Support
title-block-banner: "#3459e6"
author:
  - name: David Simon
    orcid: 0009-0005-6451-3790
    email: da.simon@dipf.de
    affiliations:
      - name: DIPF | Leibniz Institute for Research and Information in Education
date: today
date-format: DD MMMM YYYY
editor: source
execute:
  warning: false
  message: false
  cache: true
format: 
  html:
    echo: true
    theme: zephyr
    mainfont: Arial
    fontsize: 1.2em
    code-block-bg: true
    code-block-border-left: "#3459e6"
    toc: true
    toc-location: left
    toc-depth: 4
    embed-resources: true
    code-fold: true
    code-tools: true
    code-link: true
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
bibliography: references.bib
---

```{css}
#| echo: false
p {
  text-align: justify
}
```

## Information

Unfold code to see information:

```{r}
# Input: b_sab_mzp2_2024_R_data_file.csv
#
# Output: --
#
# Contents: (1) Read Data
#           (2) Measures
#           (3) Results

####  ------------- Load Packages ------------- ####
library(here)           # find files
library(tidyverse)      # data management
library(psych)          # scale construction, EFA, CFA
library(lavaan)         # SEM
```

## Data Analysis

### 1 Read Data

Data:

```{r}
data <- read.csv(here("01_data/b_sab_mzp2_2024_R_data_file.csv"))
```

### 2 Measures

#### 2.1 Confirmatory  Factor Analysis (CFA): Social Support Scales  
Items measuring social supports were developed aligning with Richter at al. [-@richter2011soziale], Schulz and Schwarzer [-@BSS] and our theoretical understanding of social support. We adapted the perspective to that of the educators (social support providers). Five items were created for each dimension of social support. The factorial structure of three dimensions was tested calculating a confirmatory factor analysis. 

Data for CFA:

```{r}
data_cfa_1 <- data %>%
  dplyr::select(sozunt_ins5:sozunt_ins2)
```

*Step 1: Fitting a Three-factor Model*

```{r}
# specify the model
cfa_model_ss <- ' inf =~ sozunt_inf1 + sozunt_inf2 + sozunt_inf3 + sozunt_inf4 + 
                         sozunt_inf5
                  emo =~ sozunt_emo1 + sozunt_emo2 + sozunt_emo3 + sozunt_emo4 + 
                         sozunt_emo5
                  ins =~ sozunt_ins1 + sozunt_ins2 + sozunt_ins3 + sozunt_ins4 + 
                         sozunt_ins5 '

# fit the model
fit_cfa_ss <- lavaan::cfa(cfa_model_ss, data = data_cfa_1)

# evaluate the model
summary(fit_cfa_ss, standardized = TRUE)
```

Model fit was poor:

```{r}
# CFI cut-off: .95; SRMR cut-off: .09
lavaan::fitMeasures(fit_cfa_ss, c("chisq", "df", "pvalue", "cfi", "srmr"))
```
Since no items loaded significantly on the instrumental support factor `ins`, we discarded these items and fitted a two-factor model distinguishing between emotional and informational support:

*Step 2: Fitting a Two-factor Model*

```{r}
# specify the model
cfa_model_ss_2 <- ' inf =~ sozunt_inf1 + sozunt_inf2 + sozunt_inf3 + sozunt_inf4 + 
                           sozunt_inf5
                    emo =~ sozunt_emo1 + sozunt_emo2 + sozunt_emo3 + sozunt_emo4 + 
                           sozunt_emo5 '

# fit the model
fit_cfa_ss_2 <- lavaan::cfa(cfa_model_ss_2, data = data_cfa_1)
```

Model fit was still poor:

```{r}
# CFI cut-off: .95; SRMR cut-off: .09
lavaan::fitMeasures(fit_cfa_ss_2, c("chisq", "df", "pvalue", "cfi", "srmr"))
```

Evaluation of factor loading:

```{r}
inspect_fit_cfa_ss_2 <- lavaan::inspect(fit_cfa_ss_2, what = "std")
inspect_fit_cfa_ss_2$lambda
```

We discarded the items `sozunt_inf1` and `sozunt_emo1` (factor loading < .45) and reran the CFA:

```{r}
# specify the model
cfa_model_ss_3 <- ' inf =~ sozunt_inf2 + sozunt_inf3 + sozunt_inf4 + 
                           sozunt_inf5
                    emo =~ sozunt_emo2 + sozunt_emo3 + sozunt_emo4 + 
                           sozunt_emo5 '

# fit the model
fit_cfa_ss_3 <- lavaan::cfa(cfa_model_ss_3, data = data_cfa_1)
```

Model fit was close to meeting the desired criteria:

```{r}
# CFI cut-off: .95; SRMR cut-off: .09
lavaan::fitMeasures(fit_cfa_ss_3, c("chisq", "df", "pvalue", "cfi", "srmr"))
```
*Step 3: Evaluating Reliability*

```{r}
inf_sup_alpha <- data %>% 
  dplyr::select(sozunt_inf2, sozunt_inf3, sozunt_inf4, sozunt_inf5) %>%
  psych::alpha(title = "sozunt_inf")

emo_sup_alpha <- data %>%  
  dplyr::select(sozunt_emo2, sozunt_emo3, sozunt_emo4, sozunt_emo5) %>%
  psych::alpha(title = "sozunt_emo")
```

We were interested whether reliability improves if an item is dropped and if that might as well further improve model fit, which was not the case. 

- Alpha informational support: `r inf_sup_alpha$total$std.alpha`  
- Reliability if an item is dropped: 
```{r}
inf_sup_alpha$alpha.drop[1:2]
```

- Alpha emotional support: `r emo_sup_alpha$total$std.alpha`
- Reliability if an item is dropped: 
```{r}
emo_sup_alpha$alpha.drop[1:2]
```

*Step 4: Interpretation of factors*  

In order to not over fit the model, we proceeded with the following model:

- Factor 1: Informational support (“Tips and advice”) was best represented through the items `sozunt_inf2`, `sozunt_inf3`, `sozunt_inf4` and `sozunt_inf5`.

- Factor 2: Emotional support ("Comfort and nearness") was best represented through the items `sozunt_emo2`, `sozunt_emo3`, `sozunt_emo4` and `sozunt_emo5`.

#### 2.2 Confirmatory Factor Analysis (CFA):  Self-Efficacy Scale
Tickell and Klassen [-@tickell2024developing] developed a  scale for measuring teacher mentoring self-efficacy beliefs and suggest a two-factor model, with factors named as *Pedagogical Practices* and *Professional Relationships*. We tested this factor structure in our German translation of the questionnaire:

Data for CFA:

```{r}
data_cfa_2 <- data %>%
  dplyr::select(seffsab_1:seffsab_9)
```

*Step 1: Fitting a Two-factor Model*

```{r}
# specify the model
cfa_model_se <- ' pae =~ seffsab_1 + seffsab_2 + seffsab_20 + seffsab_14 + 
                         seffsab_6 + seffsab_28 + seffsab_48 + seffsab_39 +
                         seffsab_46 + seffsab_47 + seffsab_4
                  rel =~ seffsab_29 + seffsab_44 + seffsab_27 + seffsab_42 + 
                         seffsab_9 '

# fit the model
fit_cfa_se <- lavaan::cfa(cfa_model_se, data = data_cfa_2)
```

Model fit was poor:

```{r}
# CFI cut-off: .95; SRMR cut-off: .09
lavaan::fitMeasures(fit_cfa_se, c("chisq", "df", "pvalue", "cfi", "srmr"))
```

*Step 2: Evaluating Factor Loading*

In order to improve the model-fit we evaluated the factor loading of each item:

```{r}
inspect_fit_cfa_se <- lavaan::inspect(fit_cfa_se, what = "std")
inspect_fit_cfa_se$lambda
```

In the case of *Professional Relationships* several items showed a small factor loading (factor loading < .45). We discarded the items `seffsab_28`, `seffsab_47` and `seffsab_48` subsequently until further adaptation did not improve model fit anymore. 

We reran the CFA:

```{r}
# specify the model
cfa_model_se_2 <- ' pae =~ seffsab_1 + seffsab_2 + seffsab_20 + seffsab_14 + 
                           seffsab_6 + seffsab_39 + seffsab_46 + seffsab_4
                    rel =~ seffsab_29 + seffsab_44 + seffsab_27 + seffsab_42 + 
                           seffsab_9 '

# fit the model
fit_cfa_se_2 <- lavaan::cfa(cfa_model_se_2, data = data_cfa_2)
```

Although the model fit was not as good as desired, we considered it to be sufficient:

```{r}
# CFI cut-off: .95; SRMR cut-off: .09
fitMeasures(fit_cfa_se_2, c("chisq", "df", "pvalue", "cfi", "srmr"))
```

*Step 3: Evaluating Reliability*

Both scales showed acceptable reliability:

```{r}
sef_pea_alpha <- data %>% 
  dplyr::select(seffsab_1, seffsab_2, seffsab_20, seffsab_14, seffsab_6, 
                seffsab_39, seffsab_46, seffsab_4) %>%
  psych::alpha(title = "sef_pea_alpha")

sef_rel_alpha <- data %>%  
  dplyr::select(seffsab_29, seffsab_44, seffsab_27, seffsab_42, seffsab_9) %>%
  psych::alpha(title = "sef_rel_alpha")
```

- Alpha Pedagogical Practices: `r sef_pea_alpha$total$std.alpha`
- Alpha Professional Relationships: `r sef_rel_alpha$total$std.alpha`

*Step 4: Contrasting a One-factor Model*

And...Vergleich mit einem 1. faktoriellen Modell...

#### 2.3 Compute Scale Scores

Unfold code to see scale construction:

```{r}
# Factor vignette, dummy for each vignette
data <- data %>%
  dplyr::mutate(vig = case_when((random == 1) ~ 1,
                                (random == 2) ~ 2,
                                (random == 3) ~ 3,
                                TRUE ~ as.numeric(NA)),
                vig1 = ifelse(vig == 1, 1, 0),
                vig2 = ifelse(vig == 2, 1, 0),
                vig3 = ifelse(vig == 3, 1, 0))


data$vig <- as.factor(data$vig)


## Attribution 

data <- data %>%
  dplyr::mutate(int = int_1,  # Internality
                sta = sta_1,  # Stability 
                glo = glo_1,  # Globality
                con = kon_1)  # Controllability

## Affect 

# Negative affect, positive affect
data <- data %>% 
  dplyr::mutate(pos_aff = rowMeans(subset(data, select = c(affekt_1, affekt_3, 
                                                           affekt_4, affekt_6, 
                                                           affekt_10, affekt_11,
                                                           affekt_12, affekt_15)),
                                   na.rm = TRUE),
                neg_aff = rowMeans(subset(data, select = c(affekt_2, affekt_5, 
                                                           affekt_7, affekt_8, 
                                                           affekt_13, affekt_14,
                                                           affekt_16)),
                                   na.rm = TRUE),
                ang = affekt_5,   # Anger
                gui = affekt_7,   # Guilt
                sha = affekt_14)  # Shame


## Social Support

# Informational support
data <- data %>% 
  dplyr::mutate(inf_sup = rowMeans(subset(data, select = c(sozunt_inf2,
                                                           sozunt_inf3,
                                                           sozunt_inf4, 
                                                           sozunt_inf5)),
                                   na.rm = TRUE),

# Emotional support
                emo_sup = rowMeans(subset(data, select = c(sozunt_emo2, 
                                                           sozunt_emo3, 
                                                           sozunt_emo4,
                                                           sozunt_emo5)),
                                   na.rm = TRUE))

## Self-efficacy

# Self-efficacy, Factor 1: Pedagogical Practices   
data <- data %>% 
  dplyr::mutate(sef_pea = rowMeans(subset(data, select = c(seffsab_1, seffsab_2, 
                                                           seffsab_20, seffsab_14, 
                                                           seffsab_6, seffsab_39, 
                                                           seffsab_46, seffsab_4)),
                                   na.rm = TRUE),

# Self-efficacy, Factor 2: Relationships
                sef_rel = rowMeans(subset(data, select = c(seffsab_29,seffsab_44,
                                                           seffsab_27,seffsab_42, 
                                                           seffsab_9)),
                                   na.rm = TRUE))
```

#### 2.4 Glossary

*Attributions*   
adapted from [@zurattributionsstil]

- `int`: Internality
- `sta`: Stability
- `glo`: Globality
- `con`: Controllability

*Affect*  
after [@breyer2016deutsche]

- `pos_aff`: Positive affect
- `neg_aff`: Negative affect
- `ang`: Anger
- `gui`: Guilt
- `sha`: Shame

*Social Support*  
adapted from [@richter2011soziale]

- `inf_sup`: Informational support
- `ins_sup`: Instrumental support
- `emo_sup`: Emotional support

*Self-efficacy*  
adapted from [@tickell2024developing]

- `sef_pea`: Pedagogical Practices
- `sef_res`: Relationships

### 3 Results

- H1a: Controllability predicts witholding of help
- H1b: Internality predicts witholding of help
- H1c: The effect of internality on withholding help is moderated by stability, such that internality predicts withholding help more strongly when stability is low
- H1d: The relationships are mediated by anger

#### 3.1 Correlation matrix
```{r}
# tbc
```


#### 3.2 Preliminaries

Only include data, that participated in the vignette experiment:
```{r}
data <- data %>%
  dplyr::filter(vig == 1 | vig == 2 | vig == 3) 
```

Test for normality, etc.
```{r}
# tbc
```

Independent variables were mean centered, before the interaction terms were calculated:

```{r}
# mean center independent variables
data$int_cntrd <- scale(data$int, center = TRUE, scale = TRUE)
data$sta_cntrd <- scale(data$sta, center = TRUE, scale = TRUE)
data$con_cntrd <- scale(data$con, center = TRUE, scale = TRUE)

# Interaction terms
data$conXint <- data$con_cntrd * data$int_cntrd 
data$intXsta <- data$int_cntrd * data$sta_cntrd 
```

The high correlations between the support scales can lead to multicollinearity and suppression effects in structural equation models. To reduce these effects, different models were calculated for each kind of social support:

#### 3.3 Informational support

```{r}
model_inf_sup <- '
  # Mesurement model
  
  # Measurement model: Informational support
  inf_support =~ sozunt_inf2 + sozunt_inf3 + sozunt_inf4 + sozunt_inf5
  
  # Structural model
  
  # Direct effects
  inf_support ~ c1*int_cntrd + c2*sta_cntrd + c3*con_cntrd + c4*conXint + c5*intXsta
  
  # Mediator
  ang ~ a1*int_cntrd + a2*sta_cntrd + a3*con_cntrd + a4*conXint + a5*intXsta
  
  inf_support ~ b*ang
  
  # Indirect effect
  ie_con := a3*c3
  ie_conXint := a4*c4
  ie_intXsta := a5*c5
  
  # Total effect
  te_con := b + (a3*c3)
  te_conXint := b + (a4*c4)
  te_intXsta := b + (a5*c5)
  
  # Effect of self-efficacy
  inf_support ~ sef_pea
  inf_support ~ sef_rel

  # Added due to modification indices: Improves Fit greatly
  sozunt_inf2 ~~ sozunt_inf4
  
  # Simple Slopes: 
  # Con at designated levels of Int:
  Int_High := c3+c4*1     # high int: +1 SD
  Int_Mod := c3+c4*0      # at the mean of (centered) int
  Int_Low := c3+c4*(-1)   # low int: -1 SD
  
  # Int at designated levels of Sta : 
  Sta_High := c1+c5*1     # high sta: +1 SD
  Sta_Mod := c1+c5*0      # at the mean of (centered) sta
  Sta_Low := c1+c5*(-1)   # low sta: -1 SD
'

fit_inf_sup <- lavaan::sem(model = model_inf_sup, 
                           data = data, 
                           estimator = "MLR",
                           missing = "ML",
                           cluster = "vig", # leads to warning: vcov does not appear to be positive definite!
                           se = "robust",
                           meanstructure = TRUE)

summary(fit_inf_sup, standardized = TRUE, rsquare = TRUE)
```

Model fit:
```{r}
fitMeasures(fit_inf_sup, c("chisq", "df", "pvalue", "cfi", "srmr", "rmsea"))
```
#### 3.4 Emotional support

```{r}
model_emo_sup <- '
  # Mesurement model
  
  # Measurement model: Emotional support
  emo_support =~ sozunt_emo2 + sozunt_emo3 + sozunt_emo4 + sozunt_emo5
  
  # Structural model
  
  # Direct effects
  emo_support ~ c1*int_cntrd + c2*sta_cntrd + c3*con_cntrd + c4*conXint + c5*intXsta
  
  # Mediator
  ang ~ a1*int_cntrd + a2*sta_cntrd + a3*con_cntrd + a4*conXint + a5*intXsta
  
  emo_support ~ b*ang
  
  # Indirect effect
  ie_con := a3*c3
  ie_conXint := a4*c4
  ie_intXsta := a5*c5
  
  # Total effect
  te_con := b + (a3*c3)
  te_conXint := b + (a4*c4)
  te_intXsta := b + (a5*c5)
  
  # Effect of self-efficacy
  emo_support ~ sef_pea
  emo_support ~ sef_rel
  
  # Simple Slopes: 
  # Con at designated levels of Int:
  Int_High := c3+c4*1     # high int: +1 SD
  Int_Mod := c3+c4*0      # at the mean of (centered) int
  Int_Low := c3+c4*(-1)   # low int: -1 SD
  
  # Int at designated levels of Sta : 
  Sta_High := c1+c5*1     # high sta: +1 SD
  Sta_Mod := c1+c5*0      # at the mean of (centered) sta
  Sta_Low := c1+c5*(-1)   # low sta: -1 SD
'

fit_emo_sup <- lavaan::sem(model = model_emo_sup, 
                           data = data, 
                           missing = "ML",
                           cluster = "vig",
                           se = "robust",
                           meanstructure = TRUE)

summary(fit_emo_sup, standardized = TRUE, rsquare = TRUE)
```

Model fit:
```{r}
fitMeasures(fit_emo_sup, c("chisq", "df", "pvalue", "cfi", "srmr", "rmsea"))
```

#### 3.6 Exploration

*Might there be a relationship between anger and self-efficacy?*

Yes:

```{r}
model <- lm(ang ~ sef_rel + sef_pea, data = data)
summary(model, standardized = TRUE)
```

- Vielleicht können wir uns noch anschauen, wie sich die SE auf das Wohlbefinden auswirkt, angeregt durch den Befund, dass die SAB hier in Abhängigkeit ihrer SE negativere Emotionen haben.

#### 3.7 Descriptives: Vignettes

*Were the situations perceived as a failure?*

"How much do you see the lessons you have experienced as a failure or a success?"

- 1, 2, 3: Failure
- 4, 5, 6: Success

```{r}
data_vig1 <- data %>% 
  dplyr::filter(vig == 1) 

data_vig2 <- data %>% 
  dplyr::filter(vig == 2) 

data_vig3 <- data %>% 
  dplyr::filter(vig == 3) 

tab1 <- table(data_vig1$check_1)
tab2 <- table(data_vig2$check_1)
tab3 <- table(data_vig3$check_1)

barplot(tab1, main = "Vignette 1")
barplot(tab2, main = "Vignette 2")
barplot(tab3, main = "Vignette 3")
```

*Were the situations cause equally attributed?*

```{r}
tab4 <- data.frame(int = mean(data_vig1$int, na.rm = TRUE),
                   sta = mean(data_vig1$sta, na.rm = TRUE),
                   glo = mean(data_vig1$glo, na.rm = TRUE),
                   con = mean(data_vig1$con, na.rm = TRUE))

tab5 <- data.frame(int = mean(data_vig2$int, na.rm = TRUE),
                   sta = mean(data_vig2$sta, na.rm = TRUE),
                   glo = mean(data_vig2$glo, na.rm = TRUE),
                   con = mean(data_vig2$con, na.rm = TRUE))

tab6 <- data.frame(int = mean(data_vig3$int, na.rm = TRUE),
                   sta = mean(data_vig3$sta, na.rm = TRUE),
                   glo = mean(data_vig3$glo, na.rm = TRUE),
                   con = mean(data_vig3$con, na.rm = TRUE))

barplot(as.matrix(tab4), main = "Vignette 1")
barplot(as.matrix(tab5), main = "Vignette 2")
barplot(as.matrix(tab6), main = "Vignette 3")
```

*What reasons were given for the situation?*

```{r}
sorted_data <- data %>%
  dplyr::select(vig, ursache) %>%
   dplyr::arrange(vig)
```

Vignette 1: "General turbulence among students"

```{r}
sorted_data_vig1 <- sorted_data %>%
  dplyr::filter(vig == 1)

print(sorted_data_vig1$ursache)
```

Vignette 2: "Only a third work"

```{r}
sorted_data_vig2 <- sorted_data %>%
  dplyr::filter(vig == 2)

print(sorted_data_vig2$ursache)
```

Vignette 3: "Refusal to change seats"

```{r}
sorted_data_vig3 <- sorted_data %>%
  dplyr::filter(vig == 3)

print(sorted_data_vig3$ursache)
```

## References

::: {#refs}
:::